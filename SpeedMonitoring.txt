ORG 0000H

	MOV DPTR, #MY_COM1
	C1:
		CLR A
		MOVC A, @A+DPTR
		JZ SEND_DATA_1
		ACALL COMNWRT
		ACALL DELAY
		INC DPTR
		SJMP C1
	
	SEND_DATA_1:
		MOV DPTR, #MSG_ON_RST_1
		D1:
			CLR A
			MOVC A, @A+DPTR
			JZ SEND_DATA_2
			ACALL DATAWRT
			ACALL DELAY
			INC DPTR
			SJMP D1
	
	SEND_DATA_2:
		MOV A, #0C0H
		ACALL COMNWRT
		ACALL DELAY
		MOV DPTR, #MSG_ON_RST_2
		D2:
			CLR A
			MOVC A, @A+DPTR
			JZ SEND_DATA_3
			ACALL DATAWRT
			ACALL DELAY
			INC DPTR
			SJMP D2
	
	SEND_DATA_3:	
		ACALL DELAY_1S
			
		MOV A, #01H
		ACALL COMNWRT
		ACALL DELAY
		MOV DPTR, #MSG_ON_RST_3
		D3:
			CLR A
			MOVC A, @A+DPTR
			JZ SEND_DATA_4
			ACALL DATAWRT
			ACALL DELAY
			INC DPTR
			SJMP D3
	
	SEND_DATA_4:
		MOV A, #0C0H
		ACALL COMNWRT
		ACALL DELAY
		MOV DPTR, #MSG_ON_RST_4
		D4:
			CLR A
			MOVC A, @A+DPTR
			JZ DELAY_4S
			ACALL DATAWRT
			ACALL DELAY
			INC DPTR
			SJMP D4
	
	DELAY_4S:
		MOV R7, #45
		HERE3:
			ACALL DELAY
		DJNZ R7, HERE3
		
	MAIN:
		ACALL DELAY_1S
		ACALL CLR_SCREEN
		MOV A, #0FH
		ACALL COMNWRT
		ACALL DELAY
			
		CONTINUE:
			MOV R0, #00H
			MOV P2, #0FFH
			MOV TMOD, #01H
			MOV TL0, #00H
			MOV TH0, #00H
			
		READ:
			JNB P2.4, SPEED_PLUS
			JNB P2.5, SPEED_MINUS
		SJMP READ
		
		SPEED_PLUS:
			SETB TR0
			RS_2:
				JB TF0, PLUS_P
				REPEAT_P:
					JB P2.5, RS_2
					CLR TR0
					
		SEND_SPEED:
			MOV DPTR, #SPEED_WORD
			D5:
				CLR A
				MOVC A, @A+DPTR
				JZ NEXT_LINE_P
				ACALL DATAWRT
				ACALL DELAY
				INC DPTR
			SJMP D5
		
		NEXT_LINE_P:
			MOV A, #0C0H
			ACALL COMNWRT
			ACALL DELAY
			MOV A, #0FH
			ACALL COMNWRT
			ACALL DELAY
		
		ACALL TIME
		ACALL DIST_FIX
		ACALL SPEED_INIT
		ACALL SPEED_CALC
		
		SEND_SPEED_UNIT:
			MOV DPTR, #SPEED_UNIT
			D7:
				CLR A
				MOVC A, @A+DPTR
				JZ MAIN
				ACALL DATAWRT
				ACALL DELAY
				INC DPTR
			SJMP D7	
		
		SPEED_MINUS:
			SETB TR0
			RS_1:
				JB TF0, PLUS_N
				REPEAT_N:
					JB P2.4, RS_1
					CLR TR0
			
		SEND_OPP:
			MOV DPTR, #OPP_LANE_WORD
			D6:
				CLR A
				MOVC A, @A+DPTR
				JZ NEXT_LINE_N
				ACALL DATAWRT
				ACALL DELAY
				INC DPTR
			SJMP D6
			
		NEXT_LINE_N:
			MOV A, #0C0H
			ACALL COMNWRT
			ACALL DELAY
			MOV A, #0FH
			ACALL COMNWRT
			ACALL DELAY
			
		ACALL TIME
		ACALL DIST_FIX
		ACALL SPEED_INIT
		ACALL SPEED_CALC
		
		SEND_SPEED_VALUE:
			MOV A, 48H
			ACALL SPEED_DISP
			MOV A, #"."
			ACALL DATAWRT
			ACALL DELAY
			MOV A, 49H
			ACALL SPEED_DISP	
		SJMP SEND_SPEED_UNIT
		
	PLUS_P:
		INC R0
		CLR TF0
		SJMP REPEAT_P
	
	PLUS_N:
		INC R0
		CLR TF0
		SJMP REPEAT_N
	
	DELAY_1S:
			MOV R7, #13
			HERE4:
				ACALL DELAY
			DJNZ R7, HERE4
	RET
	
	TIME:
		MOV A, #20H
		MOV B, R0
		MUL AB
		MOV 43H, A
		MOV 42H, B
		MOV A, TH0
		ADDC A, #18H
		MOV 43H, A
	RET
			
	SPEED:	
		DEC R0
		MOV 44H, R0
		
		MOV A, R0
		MOV B, #5
		DIV AB
		MOV 48H, A
		MOV 49H, B
		MOV A, #02H
		MUL AB
		
		MOV 49H, A		
		MOV B, #18
		MUL AB
		MOV 51H, A
		MOV 50H, B
		MOV A, 48H
		MOV B, #18
		MUL AB
		MOV 48H, A
		MOV 49H, B
		MOV A, 51H
		MOV B, #10
		DIV AB
		MOV 50H, A
		MOV 51H, B
		MOV A, 48H
		ADD A, 50H
		MOV 48H, A
		MOV A, 49H
		ADD A, 51H
		MOV 49H, A  
		ACALL ACT_SPEED  
	JMP SEND_SPEED_VALUE
	
	SPEED_CALC:
		MOV A, R0
		MOV B, 43H
		MUL AB
		MOV 47H, A
		MOV 46H, B
	    MOV A, R0
		MOV B, 42H
		MUL AB
		ADDC A, 46H
		MOV 46H, A
	SJMP SPEED_CHK
	
	SPEED_CHK:
		MOV A, 40H
		MOV B, 46H
		CJNE A, B, CHK1
		MOV A, 41H
		MOV B, 47H
		CJNE A, B, CHK2
		SJMP SPEED
		CHK1:
			JC SPEED
			INC R0
			SJMP SPEED_CALC
		CHK2:
			JC SPEED
			INC R0
			SJMP SPEED_CALC
		
	DIST_FIX:
		MOV 40H, #27H
		MOV 41H, #10H
	RET
	
	SPEED_INIT:
		MOV R0, #01H
	RET
		
	ACT_SPEED:
		MOV A, 48H
		MOV B, #10
		DIV AB
		MOV 50H, A
		MOV A, #10
		MUL AB
		MOV 51H, A
		ADD A, 49H
		MOV 51H, A
		MOV A, 49H
		MOV B, #10
		MUL AB
		MOV 49H, A
		ADD A, 51H
		MOV 49H, A
		MOV A, 48H
		ADD A, 50H
		MOV 48H, A
	RET
	
	SPEED_DISP:
		MOV B, #100
		DIV AB
		JZ LESS_100
		ADD A, #48
		ACALL DATAWRT 
		ACALL DELAY
		LESS_100:
			MOV A, B
			MOV B, #10
			DIV AB
			ADD A, #48
			ACALL DATAWRT
			ACALL DELAY
			MOV A, B
			ADD A, #48
			ACALL DATAWRT
			ACALL DELAY
	RET
	
	COMNWRT:
		MOV P0, A
		CLR P2.6
		SETB P2.7
		ACALL DELAY
		CLR P2.7
	RET
	
	DATAWRT:
		MOV P0, A
		SETB P2.6
		SETB P2.7
		ACALL DELAY
		CLR P2.7
	RET
	
	DELAY:
		MOV R3, #200
		HERE2:
			MOV R4, #200
			HERE:
			DJNZ R4, HERE
		DJNZ R3, HERE2
	RET
	
	CLR_SCREEN:
			MOV A, #01H
			ACALL COMNWRT
			ACALL DELAY
			MOV A, #80H
			ACALL COMNWRT
			ACALL DELAY
	RET
ORG 300H
	MY_COM1: DB 38H, 0EH, 01H, 06H, 80H,0
	MSG_ON_RST_1: DB " VEHICLE SPEED",0
	MSG_ON_RST_2: DB "   DETECTION ",0
	MSG_ON_RST_3: DB "   USING 8051 ",0
	MSG_ON_RST_4: DB " MICROCONTROLLER ",0
	OPP_LANE_WORD: DB " Opposite Lane ",0
	SPEED_WORD:   DB "Speed = ",0
	SPEED_UNIT:   DB " kmph ",0	
END
